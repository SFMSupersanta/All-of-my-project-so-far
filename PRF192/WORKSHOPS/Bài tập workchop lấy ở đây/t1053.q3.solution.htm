<html>/* Advance Date
 * Test 1 - Question 3
 * advance.c
 * BTP100
 * Oct 20 2005
 */
 
#include <stdio.h>
int  getMonth(void);
int  getDay(int);
int  getPosInt(int);
void clear(void);
int  daysInMonth(int);
void add30(int *month, int *day);

int main(void) {
	int month, day;
	
	month = getMonth();
	day   = getDay(month);
	printf("30 days after %02d/%02d is ", month, day);
	add30(&month, &day);
	printf("%02d/%02d\n", month, day);
	
	return 0;
}

/* clear input buffer */
void clear(void) {
	while (getchar() != '\n');
}

/* getPosInt obtains a positive integer not greater than max and
 * returns that integer if successful; returns 0 if unsuccessful
 */
int getPosInt(int max) {
	char c;
	int rc, integer;
	
	rc = scanf("%d%c", &integer, &c);
	if (rc == 0) {
		printf("** Invalid input.  Try again! **\n");
		clear();
	} else if (c != '\n') {
		printf("** Trailing characters.  Try again! **\n");
		clear();
		rc = 0;
	} else if (integer < 1 || integer > max) {
		printf("** Out of range.  Try again! **\n");
		rc = 0;
	} else
		rc = integer;
		
	return rc;
}

/* getMonth obtains a valid month from the user */
int getMonth(void) {
	int month;
	
	do {
		printf("Month [1-12]: ");
		month = getPosInt(12);
	} while (month == 0);
	
	return month;
}

/* getDay obtains a valid day within month from the user */
int getDay(int month) {
	int day, lastDay = daysInMonth(month);
	
	do {
		printf("Day [1-%d]: ", lastDay);
		day = getPosInt(lastDay);
	} while (day == 0);
	
	return day;
}

/* daysInMonth returns the number of days in month */
int daysInMonth(int month) {
	int days;
	
	switch (month) {
	case 1:
	case 3:
	case 5:
	case 7:
	case 8:
	case 10:
	case 12:
		days = 31;
		break;
	case 2:
		days = 28;
		break;
	case 4:
	case 6:
	case 9:
	case 11:
		days = 30;
		break;
	default:
		days = 0;
	}
	
	return days;
}

/* add30 adds thirty days to *month/*day */
void add30(int *month, int *day) {
	
	if (daysInMonth(*month) == 31 && *day == 1) 
		*day = 31;
	else if (*month == 12) {
		*month = 1;
		*day = *day - 1;
	} else if (*month == 1 && *day >= 30) {
		*day = *day - 29;
		*month = 3;
	} else {
		*day = *day + 30 - daysInMonth(*month);
		*month = *month + 1;
	}
}

		
	
		
		