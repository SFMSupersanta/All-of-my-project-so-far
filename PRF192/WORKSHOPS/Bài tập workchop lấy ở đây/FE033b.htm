
<html lang="en-us" xmlns='http://www.w3.org/1999/xhtml'>
<head>
	<title>Seneca | School of Computer Studies | Programming Fundamentals Using C</title>

	<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
	<meta http-equiv="PICS-Label" content='(PICS-1.1 "http://www.icra.org/ratingsv02.html" l gen true r (cz 1 lz 1 nz 1 oz 1 vz 1) "http://www.rsac.org/ratingsv01.html" l gen true r (n 0 s 0 v 0 l 0) "http://www.classify.org/safesurf/" l gen true r (SS~~000 1))' />

	<meta name="Copyright" content="(c) Copyright Seneca College 2004" />
	<meta name="Description" content="Welcome to the Bachelors Degree of Software Development Program Web Site.  On this site you can find the introductory programming course.  Designed by Chris Szalwinski." />
	<meta name="Abstract" content="This subject reviews the principles of procedural programming.  Students study the solution of problems using structured programming techniques with the C programming language.  The emphasis throughout is on the solution of small problems."/>
	<meta name="Author" content="chris.szalwinski@senecac.on.ca"/>
	<meta name="Keywords" content="sofware development, procedural programming, lecture notes"/>

	<link rel="stylesheet" type="text/css" href="style.043.css" tppabs="http://cs.senecac.on.ca/~btp100/pages/style.043.css">
	<link rel="stylesheet" type="text/css" href="styleSPrint.043.css" tppabs="http://cs.senecac.on.ca/~btp100/pages/styleSPrint.043.css" media="screen">
	<link rel="stylesheet" type="text/css" href="stylePPrint.043.css" tppabs="http://cs.senecac.on.ca/~btp100/pages/stylePPrint.043.css" media="print">
</head>

<body>

<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE html PUBLIC
    '-//W3C//DTD XHTML 1.0 Transitional//EN'
    'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'>

<table cellspacing="0" cellpadding="0">

	<!-- Body Cell -->
	<tr height="600">
		<!-- Content Area -->
		<td class="tbody" bgcolor="ffffff">
			<table cellpadding="10" width="100%">
				<tr>
					<td bgcolor="ffffff" valign="top">

					<span class=texthead>
					<center>Exam</center>
					</span>
					<br />
					<br />
					Name _____________________________ Student Number _______________

					<!--<br />

					<p class="section">Notes:</p>
					<p>
					<ul>
					<li>This exam has 4 pages and lasts two full hours</li>
					<li>This exam is out of 40 and is worth 30% of your final grade</li>
					<li>Answer all questions in the exam booklet provided</li>
					<li>Hand in this exam paper with your answer booklet</li>
					<li>There are 4 questions in this paper - attempt all of them</li>
					<li>You may use your copy of the lecture notes, the subject notes,
					one textbook and one study sheet both sides</li>
					<li>You may use a non-programmable, non-messaging calculator</li>
					<li>You may use a paper foreign-language dictionary</li>
					</ul>
					</p>-->

					<p class="section">Question 1 (10 marks):</p>
					<p>
					Design and code a function with the header
					<pre>
int commentsOnly(char filename[ ])</pre>
					that displays all of the comments in a C source file named
					<span class=code>filename[ ]</span>.&nbsp; Each
					comment should appear on a separate line and start in the first column of that line.&nbsp;
					Your function should display multi-line comments as they appear in the
					source file, but with the first line starting in the first column.&nbsp; Your function should return 1 if
					successful, 0 if the file is not found.&nbsp; You may assume
					that there are no errors while reading the file.&nbsp;
					<p>
					For example, if the file named <span class=code>source.c</span>
					consists of the following statements
					<pre>
/* Sample File
*  source.c
*/

int main(void){
	int i;
	char s[100];

	/* prompt for input */
	printf(&quot;Enter a string : &quot;);
	/* accept a string */
	scanf(&quot;%s&quot;, s);
	/* display the string entered */
	printf(&quot;%s\n&quot;, s);

	return 0;
}</pre>
					then the statements
					<pre>
int i;
i = commentsOnly(&quot;source.c&quot;);</pre>
					should display
					<pre>
/* Sample File
*  source.c
*/
/* prompt for input */
/* accept a string */
/* display the string entered */</pre>
					and assign a value of 1 to <span class=code>i</span>.&nbsp;
					The following statements
					<pre>
int i;
i = commentsOnly(&quot;&quot;);</pre>
					should assign a value of 0 to <span class=code>i</span>.
					<p>
					(Bonus 2 marks - if you have time) Enhance your function so that each comment displays in the
					same columns as the comment appears in the source file.&nbsp; That is, if a comment starts in
					column 8 and ends in column 16 in the source file, display the comment in columns 8 through
					16 inclusive.&nbsp; You may assume that each tab character in the source file
					expands to 8 spaces on display.&nbsp;</p>

					<p class="section">Question 2 (10 marks):</p>
					<p>
					Design and code a function with the header
					<pre>
int binary(int number, int b[ ], int size)</pre>
					that stores in <span class=code>b[ ]</span>
					the binary representation of
					<span class=code>number</span>.&nbsp; Your
					function should handle positive and negative numbers
					and use two's complement notation to represent a
					negative number.&nbsp;
					<span class=code>size</span> is the maximum number of elements in <span class=code>b[ ]</span>.&nbsp;
					Your function should return 1 if successful, 0 if unsuccessful.&nbsp;
					<p>
					For example, the statements
					<pre>
int b[32] = {0};
int i;

i = binary( 1025, b, 32 );
printf(&quot;%d &quot;, i);
for ( k = 0; k &lt; 32; k++ )
	printf(&quot;%1d&quot;, b[k]);
printf(&quot;\n&quot;);</pre>
					should display
					<pre>
1 00000000000000000000010000000001</pre>
					while the statements
					<pre>
int b[32] = {0};
int i;

i = binary( -1025, b, 32 );
printf(&quot;%d &quot;, i);
for ( k = 0; k &lt; 32; k++ )
	printf(&quot;%1d&quot;, b[k]);
printf(&quot;\n&quot;);</pre>
					should display
					<pre>
1 11111111111111111111101111111111</pre>
					and the statements
					<pre>
int b[32] = {0};
int i;

i = binary( 0, b, -10 );
printf(&quot;%d &quot;, i);
printf(&quot;\n&quot;);</pre>
					should display
					<pre>
0 </pre>
					<br />

					<p class="section">Question 3 (10 marks):</p>
					<p>
					What is the exact output of the following program?&nbsp; Show your
					rough work to avoid deductions.
					<pre>
#include &lt;stdio.h&gt;
#define N 8
void r ( int a[], int n );

int main ( void ) {
	int i, j, a[N];

	r ( a, N );
	for ( i = 0; i &lt; N; i++ ){
		printf(&quot;||&quot;);
		for ( j = 0; j &lt; 5 - a[i]; j++ )
			printf(&quot;-&quot;);
		printf(&quot;\n&quot;);
	}
	return 0;
}

void r ( int a[], int n ) {
	int i, x;

	for ( i = 0; i &lt; n; i++ ){
		x = i + 1;
		a[i] = 1;
		while ( x % 2 == 0 ) {
			a[i]++;
			x /= 2;
		}
	}
}</pre>
					<br />

					<p class="section">Question 4 (10 marks):</p>
					<p>
					What is the exact output of the following program?&nbsp; Show your
					rough work to avoid deductions.
					<pre>
/* ASCII Decimal Values: read down a column to find the ASCII value of the
   character in the bottom row (for example, A is 65)  11111111111111111111111
   445555555555666666666677777777778888888888999999999900000000001111111111222
   890123456789012345678901234567890123456789012345678901234567890123456789012 */
/* 0123456789:;&lt;=&gt;?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz */

#include &lt;stdio.h&gt;
void d ( char s[], int a[], int n );

int main ( void ) {
	char s[] = &quot;shhckv&quot;;
	int i, j;
	int k[] = {4, 1, 6, 1};
	int m[] = {-4, 3, -5, 10, 6, -4};

	printf(&quot;%s\n&quot;, s);
	d( s, k, 4 );
	printf(&quot;%s\n&quot;, s);
	d( s, m, 6 );
	printf(&quot;%s\n&quot;, s);
	return 0;
}

void d ( char s[], int a[], int n ) {
	int i, j = 0;

	for ( i = 0; s[i] != '\0'; i++ ) {
		s[i] += a[j];
		j++;
		if (j == n)
			j = 0;
	}
}</pre>

					</td>
				</tr>
			</table>
		</td>
	</tr>

	<!-- Footer -->
	<tr>
		<td class="tbody">
			<table cellpadding="1" width="90%" align="center">
				<tr>
					<td width="50%" class="text3">
						<script language="javascript">
						var lh = document.location.href;
						document.write(lh)
						</script>&nbsp;&nbsp;
					</td>
					<td width="50%" align="right" class="text3">
						<script language="javascript">
						var lm = document.lastModified.slice(0,-3);
						document.write("Last Modified: " +lm)
						</script>&nbsp;&nbsp;
					</td>
				</tr>
			</table>
		</td>
	</tr>
</table>

</body>
</html>